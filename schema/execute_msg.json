{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "change_owner"
      ],
      "properties": {
        "change_owner": {
          "type": "object",
          "required": [
            "new_owner"
          ],
          "properties": {
            "new_owner": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "chain"
      ],
      "properties": {
        "chain": {
          "$ref": "#/definitions/StructUmeeMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "umee"
      ],
      "properties": {
        "umee": {
          "$ref": "#/definitions/UmeeMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "supply"
      ],
      "properties": {
        "supply": {
          "$ref": "#/definitions/SupplyParams"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "BorrowParams": {
      "type": "object",
      "required": [
        "asset",
        "borrower"
      ],
      "properties": {
        "asset": {
          "$ref": "#/definitions/Coin"
        },
        "borrower": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "CollateralizeParams": {
      "type": "object",
      "required": [
        "borrower",
        "coin"
      ],
      "properties": {
        "borrower": {
          "$ref": "#/definitions/Addr"
        },
        "coin": {
          "$ref": "#/definitions/Coin"
        }
      }
    },
    "DecollateralizeParams": {
      "type": "object",
      "required": [
        "borrower",
        "coin"
      ],
      "properties": {
        "borrower": {
          "$ref": "#/definitions/Addr"
        },
        "coin": {
          "$ref": "#/definitions/Coin"
        }
      }
    },
    "LiquidateParams": {
      "type": "object",
      "required": [
        "borrower",
        "liquidator",
        "repayment",
        "reward"
      ],
      "properties": {
        "borrower": {
          "$ref": "#/definitions/Addr"
        },
        "liquidator": {
          "$ref": "#/definitions/Addr"
        },
        "repayment": {
          "$ref": "#/definitions/Coin"
        },
        "reward": {
          "$ref": "#/definitions/Coin"
        }
      }
    },
    "MsgAggregateExchangeRatePrevote": {
      "type": "object",
      "required": [
        "feeder",
        "hash",
        "validator"
      ],
      "properties": {
        "feeder": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "validator": {
          "type": "string"
        }
      }
    },
    "MsgAggregateExchangeRateVote": {
      "type": "object",
      "required": [
        "exchange_rates",
        "feeder",
        "salt",
        "validator"
      ],
      "properties": {
        "exchange_rates": {
          "type": "string"
        },
        "feeder": {
          "type": "string"
        },
        "salt": {
          "type": "string"
        },
        "validator": {
          "type": "string"
        }
      }
    },
    "MsgDelegateFeedConsent": {
      "type": "object",
      "required": [
        "delegate",
        "operator"
      ],
      "properties": {
        "delegate": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        }
      }
    },
    "MsgMaxWithDrawParams": {
      "type": "object",
      "required": [
        "denom",
        "supplier"
      ],
      "properties": {
        "denom": {
          "type": "string"
        },
        "supplier": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "RepayParams": {
      "type": "object",
      "required": [
        "asset",
        "borrower"
      ],
      "properties": {
        "asset": {
          "$ref": "#/definitions/Coin"
        },
        "borrower": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "StructUmeeMsg": {
      "type": "object",
      "required": [
        "assigned_msg"
      ],
      "properties": {
        "aggregate_exchange_rate_prevote": {
          "anyOf": [
            {
              "$ref": "#/definitions/MsgAggregateExchangeRatePrevote"
            },
            {
              "type": "null"
            }
          ]
        },
        "aggregate_exchange_rate_vote": {
          "anyOf": [
            {
              "$ref": "#/definitions/MsgAggregateExchangeRateVote"
            },
            {
              "type": "null"
            }
          ]
        },
        "assigned_msg": {
          "$ref": "#/definitions/UmeeMsgTypes"
        },
        "borrow": {
          "anyOf": [
            {
              "$ref": "#/definitions/BorrowParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "collateralize": {
          "anyOf": [
            {
              "$ref": "#/definitions/CollateralizeParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "decollateralize": {
          "anyOf": [
            {
              "$ref": "#/definitions/DecollateralizeParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "delegate_feed_consent": {
          "anyOf": [
            {
              "$ref": "#/definitions/MsgDelegateFeedConsent"
            },
            {
              "type": "null"
            }
          ]
        },
        "liquidate": {
          "anyOf": [
            {
              "$ref": "#/definitions/LiquidateParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "max_withdraw": {
          "anyOf": [
            {
              "$ref": "#/definitions/MsgMaxWithDrawParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "repay": {
          "anyOf": [
            {
              "$ref": "#/definitions/RepayParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "supply": {
          "anyOf": [
            {
              "$ref": "#/definitions/SupplyParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "supply_collateralize": {
          "anyOf": [
            {
              "$ref": "#/definitions/SupplyCollateralParams"
            },
            {
              "type": "null"
            }
          ]
        },
        "withdraw": {
          "anyOf": [
            {
              "$ref": "#/definitions/WithdrawParams"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "SupplyCollateralParams": {
      "type": "object",
      "required": [
        "asset",
        "supplier"
      ],
      "properties": {
        "asset": {
          "$ref": "#/definitions/Coin"
        },
        "supplier": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "SupplyParams": {
      "type": "object",
      "required": [
        "amount",
        "supplier"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Coin"
        },
        "supplier": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UmeeMsg": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "leverage"
          ],
          "properties": {
            "leverage": {
              "$ref": "#/definitions/UmeeMsgLeverage"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "oracle"
          ],
          "properties": {
            "oracle": {
              "$ref": "#/definitions/UmeeMsgOracle"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "UmeeMsgLeverage": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "supply"
          ],
          "properties": {
            "supply": {
              "$ref": "#/definitions/SupplyParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw"
          ],
          "properties": {
            "withdraw": {
              "$ref": "#/definitions/WithdrawParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "max_with_draw"
          ],
          "properties": {
            "max_with_draw": {
              "$ref": "#/definitions/MsgMaxWithDrawParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "collateralize"
          ],
          "properties": {
            "collateralize": {
              "$ref": "#/definitions/CollateralizeParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "decollateralize"
          ],
          "properties": {
            "decollateralize": {
              "$ref": "#/definitions/DecollateralizeParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "borrow"
          ],
          "properties": {
            "borrow": {
              "$ref": "#/definitions/BorrowParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "repay"
          ],
          "properties": {
            "repay": {
              "$ref": "#/definitions/RepayParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "liquidate"
          ],
          "properties": {
            "liquidate": {
              "$ref": "#/definitions/LiquidateParams"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "supply_collateral"
          ],
          "properties": {
            "supply_collateral": {
              "$ref": "#/definitions/SupplyCollateralParams"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "UmeeMsgLeverageTypes": {
      "type": "string",
      "enum": [
        "AssignedMsgSupply",
        "AssignedMsgWithdraw",
        "AssignedMsgMaxWithdraw",
        "AssignedMsgCollateralize",
        "AssignedMsgDecollateralize",
        "AssignedMsgBorrow",
        "AssignedMsgRepay",
        "AssignedMsgLiquidate",
        "AssignedMsgSupplyCollateralize"
      ]
    },
    "UmeeMsgOracle": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "aggregate_exchange_rate_prevote"
          ],
          "properties": {
            "aggregate_exchange_rate_prevote": {
              "$ref": "#/definitions/MsgAggregateExchangeRatePrevote"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "aggregate_exchange_rate_vote"
          ],
          "properties": {
            "aggregate_exchange_rate_vote": {
              "$ref": "#/definitions/MsgAggregateExchangeRateVote"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "delegate_feed_consent"
          ],
          "properties": {
            "delegate_feed_consent": {
              "$ref": "#/definitions/MsgDelegateFeedConsent"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "UmeeMsgOracleTypes": {
      "type": "string",
      "enum": [
        "assigned_aggregate_exchange_rate_prevote",
        "assigned_aggregate_exchange_rate_vote",
        "assigned_delegate_feed_consent"
      ]
    },
    "UmeeMsgTypes": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "leverage"
          ],
          "properties": {
            "leverage": {
              "$ref": "#/definitions/UmeeMsgLeverageTypes"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "oracle"
          ],
          "properties": {
            "oracle": {
              "$ref": "#/definitions/UmeeMsgOracleTypes"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "WithdrawParams": {
      "type": "object",
      "required": [
        "amount",
        "supplier"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Coin"
        },
        "supplier": {
          "$ref": "#/definitions/Addr"
        }
      }
    }
  }
}
